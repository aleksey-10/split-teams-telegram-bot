// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  telegramUserId BigInt?
  username       String?       @unique
  firstName      String?       @db.Char(36)
  lastName       String?       @db.Char(36)
  level          Int?
  PollResults    PollResults[]
  UserChat       UserChats[]

  @@map("user")
}

model PollChatId {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  pollId      String        @unique
  chatId      BigInt
  PollResults PollResults[]

  @@map("poll_chat_id")
}

model PollResults {
  id         Int        @id @default(autoincrement())
  userId     Int
  optionId   Int?
  pollId     String
  user       User?      @relation(fields: [userId], references: [id])
  pollChatId PollChatId @relation(fields: [pollId], references: [pollId], onDelete: Cascade)

  @@index([userId], map: "userId")
  @@map("poll_results")
}

model UserChats {
  id     Int    @id @default(autoincrement())
  userId Int
  chatId BigInt
  user   User?  @relation(fields: [userId], references: [id])

  @@map("user_chat")
}
